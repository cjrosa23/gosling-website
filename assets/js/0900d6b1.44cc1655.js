(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{100:function(n,e,t){"use strict";t.d(e,"a",(function(){return d})),t.d(e,"b",(function(){return g}));var a=t(0),i=t.n(a);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var s=i.a.createContext({}),m=function(n){var e=i.a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},d=function(n){var e=m(n.components);return i.a.createElement(s.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return i.a.createElement(i.a.Fragment,{},e)}},u=i.a.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,o=n.parentName,s=c(n,["components","mdxType","originalType","parentName"]),d=m(t),u=a,g=d["".concat(o,".").concat(u)]||d[u]||p[u]||r;return t?i.a.createElement(g,l(l({ref:e},s),{},{components:t})):i.a.createElement(g,l({ref:e},s))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,o=new Array(r);o[0]=u;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l.mdxType="string"==typeof n?n:a,o[1]=l;for(var s=2;s<r;s++)o[s]=t[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},72:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return o})),t.d(e,"metadata",(function(){return l})),t.d(e,"toc",(function(){return c})),t.d(e,"default",(function(){return m}));var a=t(3),i=t(8),r=(t(0),t(100)),o={title:"Multi-track Visualizations"},l={unversionedId:"create-multi-track-visualization",id:"create-multi-track-visualization",isDocsHomePage:!1,title:"Multi-track Visualizations",description:"In Tutorial 1, we introduce how to load data, encode data with marks, transform data, overlay multiple marks and obtain the following visualization.",source:"@site/gosling-docs/tutorials/create-multi-track-visualization.md",slug:"/create-multi-track-visualization",permalink:"/tutorials/create-multi-track-visualization",version:"current",sidebar:"tutorials",previous:{title:"Create Single Track Visualization",permalink:"/tutorials/"},next:{title:"Multi-view Visualizations",permalink:"/tutorials/create-multi-view-visualization"}},c=[{value:"Semantic Zooming",id:"semantic-zooming",children:[]},{value:"Multiple Linked Tracks",id:"multiple-linked-tracks",children:[]},{value:"Circular Layout",id:"circular-layout",children:[]}],s={toc:c};function m(n){var e=n.components,t=Object(i.a)(n,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In ",Object(r.b)("a",{parentName:"p",href:"https://github.com/gosling-lang/gosling-docs/blob/master/tutorials/create-single-track-visualization.md"},"Tutorial 1"),", we introduce how to load data, encode data with marks, transform data, overlay multiple marks and obtain the following visualization."),Object(r.b)("img",{src:"https://raw.githubusercontent.com/gosling-lang/gosling-docs/master/images/tutorial/tutorial_overlay.png",alt:"gosling vis overlay",width:"800"}),Object(r.b)("details",null,Object(r.b)("summary",null,"click to expand the code"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},'{\n    "tracks":[{\n        "width": 700,\n        "height": 70,\n        "data": {\n            "url": "https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG38.Human.CytoBandIdeogram.csv",\n            "type": "csv",\n            "chromosomeField": "Chromosome",\n            "genomicFields": ["chromStart", "chromEnd"]\n        },   \n        "x": {\n            "field": "chromStart",\n            "type": "genomic",\n            "domain": {"chromosome": "1"},\n            "axis": "top"\n        },\n        "xe": {"field": "chromEnd", "type": "genomic"},\n        "alignment": "overlay",\n        "tracks":[\n             {\n             "mark": "rect",\n             "dataTransform": {\n                     "filter": [{"field": "Stain", "oneOf": ["acen"], "not": true}]\n                 },\n             "color": {\n                 "field": "Stain", \n                 "type": "nominal",\n                 "domain": ["gpos25", "gpos50", "gpos75", "gpos100"],\n                 "range": ["#D9D9D9","#979797","#636363", "black"]\n             }\n             },\n            {\n              "mark": "triangleRight",\n              "dataTransform": {\n                "filter": [\n                  {"field": "Stain", "oneOf": ["acen"]},\n                  {"field": "Name", "include": "q"}\n                ]\n              },\n              "color": {"value": "#B70101"}\n            },\n            {\n              "mark": "triangleLeft",\n              "dataTransform": {\n                "filter": [\n                  {"field": "Stain", "oneOf": ["acen"]},\n                  {"field": "Name", "include": "p"}\n                ]\n              },\n              "color": {"value": "#B70101"}\n            }\n        ],\n        "size": {"value": 20},\n        "stroke": {"value": "gray"},\n        "strokeWidth": {"value": 0.5}\n    }]\n}\n'))),Object(r.b)("p",null,"This tutorial continues from this example and introduces more advances functions: "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#semantic-zooming"},"Semantic Zooming")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#multiple-linked-tracks"},"Multiple Linked Tracks")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"#circular-layout"},"Circular Layout"))),Object(r.b)("h2",{id:"semantic-zooming"},"Semantic Zooming"),Object(r.b)("p",null,"Apart from the default zoom and pan interactions, ",Object(r.b)("a",{parentName:"p",href:"https://github.com/gosling-lang/gosling-docs/blob/master/docs/semantic-zoom.md"},"semantic zoom")," is supported in Gosling and allows users to switch between different visualizations of the same data through zooming in/out. When zooming in, the same data will be represented in a different way in which more details are shown. "),Object(r.b)("p",null,"Let's say, for this visualization, we want text annotations to show up when zooming in.\nWe add ",Object(r.b)("inlineCode",{parentName:"p"},"text")," marks to the ",Object(r.b)("inlineCode",{parentName:"p"},"overlay")," property and specify when the ",Object(r.b)("inlineCode",{parentName:"p"},"text")," marks should appear through the ",Object(r.b)("inlineCode",{parentName:"p"},"visibility")," property.\nWe may wish the text marks to appear when the distance between chromStart and chromEnd is big enough to place a text mark.\nIn other words, the text marks appear when the width (",Object(r.b)("inlineCode",{parentName:"p"},"measure"),") of the text mark (",Object(r.b)("inlineCode",{parentName:"p"},"target"),") is less than (",Object(r.b)("inlineCode",{parentName:"p"},"operation"),") than ",Object(r.b)("inlineCode",{parentName:"p"},"|xe-x|"),"."),Object(r.b)("img",{src:"https://raw.githubusercontent.com/gosling-lang/gosling-docs/master/images/tutorial/tutorial_text_label.png",alt:"gosling semantic zoom",width:"800"}),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-diff"},'{\n  "tracks": [\n    {\n      "width": 700,\n      "height": 70,\n      "data": {\n        "url": "https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG38.Human.CytoBandIdeogram.csv",\n        "type": "csv",\n        "chromosomeField": "Chromosome",\n        "genomicFields": ["chromStart", "chromEnd"]\n      },\n      "x": {\n        "field": "chromStart",\n        "type": "genomic",\n        "domain": {"chromosome": "1"},\n        "axis": "top"\n      },\n      "xe": {"field": "chromEnd", "type": "genomic"},\n      "alignment": "overlay",\n      "tracks": [\n+        {\n+          "mark": "text",\n+          "dataTransform": {\n+            "filter": [{"field": "Stain", "oneOf": ["acen"], "not": true}]\n+          },\n+          "text": {"field": "Name", "type": "nominal"},\n+          "color": {\n+            "field": "Stain",\n+            "type": "nominal",\n+            "domain": ["gneg", "gpos25", "gpos50", "gpos75", "gpos100", "gvar"],\n+            "range": ["black", "black", "black", "black", "white", "black"]\n+          },\n+          "visibility": [\n+            {\n+              "operation": "less-than",\n+              "measure": "width",\n+              "threshold": "|xe-x|",\n+              "target": "mark"\n+            }\n+          ],\n+          "style": {"textStrokeWidth": 0}\n+        },\n        {\n          "mark": "rect",\n          "dataTransform": {\n            "filter": [{"field": "Stain", "oneOf": ["acen"], "not": true}]\n          },\n          "color": {\n            "field": "Stain",\n            "type": "nominal",\n            "domain": ["gneg", "gpos25", "gpos50", "gpos75", "gpos100", "gvar"],\n            "range": [\n              "white",\n              "#D9D9D9",\n              "#979797",\n              "#636363",\n              "black",\n              "#A0A0F2"\n            ]\n          }\n        },\n        {\n          "mark": "triangleRight",\n          "dataTransform": {\n            "filter": [\n              {"field": "Stain", "oneOf": ["acen"]},\n              {"field": "Name", "include": "q"}\n            ]\n          },\n          "color": {"value": "#B40101"}\n        },\n        {\n          "mark": "triangleLeft",\n          "dataTransform": {\n            "filter": [\n              {"field": "Stain", "oneOf": ["acen"]},\n              {"field": "Name", "include": "p"}\n            ]\n          },\n          "color": {"value": "#B40101"}\n        }\n      ],\n      "size": {"value": 20},\n      "stroke": {"value": "gray"},\n      "strokeWidth": {"value": 0.5}\n    }\n  ]\n}\n')),Object(r.b)("h2",{id:"multiple-linked-tracks"},"Multiple Linked Tracks"),Object(r.b)("p",null,"We may wish to represent the same data from different aspects using different types of visualization.\nTo achieve this, we add an area chart (i.e., a new ",Object(r.b)("inlineCode",{parentName:"p"},"track"),") to the ",Object(r.b)("inlineCode",{parentName:"p"},"tracks")," property.\nSince these tracks share the same ",Object(r.b)("inlineCode",{parentName:"p"},"x")," coordinate, we wish to link these two tracks: the zooming and panning performed in one track will be automatically applied to the linked track.",Object(r.b)("br",{parentName:"p"}),"\n","In Gosling, ",Object(r.b)("inlineCode",{parentName:"p"},"tracks")," can be linked by assigning ",Object(r.b)("inlineCode",{parentName:"p"},"x")," the same  ",Object(r.b)("inlineCode",{parentName:"p"},"linkingId"),". "),Object(r.b)("img",{src:"https://raw.githubusercontent.com/gosling-lang/gosling-docs/master/images/tutorial/tutorial_multi_track.png",alt:"gosling multi tracks",width:"800"}),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-diff"},'{\n+ "spacing": 5,  \n  "tracks": [\n+     {\n+      "width": 700,\n+      "height": 40,  \n+      "data": {\n+        "url": "https://resgen.io/api/v1/tileset_info/?d=UvVPeLHuRDiYA3qwFlm7xQ",\n+        "type": "multivec",\n+        "row": "sample",\n+        "column": "position",\n+        "value": "peak",\n+        "categories": ["sample 1", "sample 2", "sample 3", "sample 4"]\n+      },\n+      "mark": "area",\n+      "x": {\n+        "field": "position",\n+        "type": "genomic",\n+        "domain": {"chromosome": "1"},\n+        "axis": "top",\n+        "linkingId": "link-1"\n+      },\n+      "y": {"field": "peak", "type": "quantitative"},\n+      "color": {"field": "sample", "type": "nominal"}\n+    },\n    {\n      "width": 700,\n-     "height": 70,\n+     "height": 20,\n      "data": {\n        "url": "https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG38.Human.CytoBandIdeogram.csv",\n        "type": "csv",\n        "chromosomeField": "Chromosome",\n        "genomicFields": ["chromStart", "chromEnd"]\n      },\n      "x": {\n        "field": "chromStart",\n        "type": "genomic",\n        "domain": {"chromosome": "1"},\n-        "axis": "top"\n+        "linkingId": "link-1"\n      },\n      "xe": {"field": "chromEnd", "type": "genomic"},\n      "alignment": "overlay",\n      "tracks": [\n        {\n          "mark": "text",\n          "dataTransform": {\n            "filter": [{"field": "Stain", "oneOf": ["acen"], "not": true}]\n          },\n          "text": {"field": "Name", "type": "nominal"},\n          "color": {\n            "field": "Stain",\n            "type": "nominal",\n            "domain": ["gneg", "gpos25", "gpos50", "gpos75", "gpos100", "gvar"],\n            "range": ["black", "black", "black", "black", "white", "black"]\n          },\n          "visibility": [\n            {\n              "operation": "less-than",\n              "measure": "width",\n              "threshold": "|xe-x|",\n              "transitionPadding": 10,\n              "target": "mark"\n            }\n          ],\n          "style": {"textStrokeWidth": 0}\n        },\n        {\n          "mark": "rect",\n          "dataTransform": {\n            "filter": [{"field": "Stain", "oneOf": ["acen"], "not": true}]\n          },\n          "color": {\n            "field": "Stain",\n            "type": "nominal",\n            "domain": ["gneg", "gpos25", "gpos50", "gpos75", "gpos100", "gvar"],\n            "range": [\n              "white",\n              "#D9D9D9",\n              "#979797",\n              "#636363",\n              "black",\n              "#A0A0F2"\n            ]\n          }\n        },\n        {\n          "mark": "triangleRight",\n          "dataTransform": {\n            "filter": [\n              {"field": "Stain", "oneOf": ["acen"]},\n              {"field": "Name", "include": "q"}\n            ]\n          },\n          "color": {"value": "#B40101"}\n        },\n        {\n          "mark": "triangleLeft",\n          "dataTransform": {\n            "filter": [\n              {"field": "Stain", "oneOf": ["acen"]},\n              {"field": "Name", "include": "p"}\n            ]\n          },\n          "color": {"value": "#B40101"}\n        }\n      ],\n      "size": {"value": 20},\n      "stroke": {"value": "gray"},\n      "strokeWidth": {"value": 0.5}\n    }\n  ]\n}\n')),Object(r.b)("h2",{id:"circular-layout"},"Circular Layout"),Object(r.b)("p",null,"We can easily turn the visualization into a circular layout through the ",Object(r.b)("inlineCode",{parentName:"p"},"layout")," property."),Object(r.b)("img",{src:"https://raw.githubusercontent.com/gosling-lang/gosling-docs/master/images/tutorial/tutorial_circular.png",alt:"gosling circular",width:"600"}),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-diff"},'+ "layout": "circular",\n+ "centerRadius": 0.6,\n')),Object(r.b)("details",null,Object(r.b)("summary",null,Object(r.b)("b",null,"Click here to expand the complete code")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javscript"},'{\n  "layout": "circular",\n  "centerRadius": 0.6,\n  "spacing": 5,  \n  "tracks": [\n     { \n      "width": 700,\n      "height": 40,  \n      "data": {\n        "url": "https://resgen.io/api/v1/tileset_info/?d=UvVPeLHuRDiYA3qwFlm7xQ",\n        "type": "multivec",\n        "row": "sample",\n        "column": "position",\n        "value": "peak",\n        "categories": ["sample 1", "sample 2", "sample 3", "sample 4"]\n      },\n      "mark": "area",\n      "x": {\n        "field": "position",\n        "type": "genomic",\n        "domain": {"chromosome": "1"},\n        "axis": "top",\n        "linkingId": "link-1"\n      },\n      "y": {"field": "peak", "type": "quantitative"},\n      "color": {"field": "sample", "type": "nominal"}\n    },\n    { \n      "width": 700,\n      "height": 20,  \n      "data": {\n        "url": "https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG38.Human.CytoBandIdeogram.csv",\n        "type": "csv",\n        "chromosomeField": "Chromosome",\n        "genomicFields": ["chromStart", "chromEnd"]\n      },\n      "x": {\n        "field": "chromStart",\n        "type": "genomic",\n        "domain": {"chromosome": "1"},\n        "linkingId": "link-1"\n      },\n      "xe": {"field": "chromEnd", "type": "genomic"},\n      "alignment": "overlay",\n      "tracks": [\n        {\n          "mark": "text",\n          "dataTransform": {\n            "filter": [{"field": "Stain", "oneOf": ["acen"], "not": true}]\n          },\n          "text": {"field": "Name", "type": "nominal"},\n          "color": {\n            "field": "Stain",\n            "type": "nominal",\n            "domain": ["gneg", "gpos25", "gpos50", "gpos75", "gpos100", "gvar"],\n            "range": ["black", "black", "black", "black", "white", "black"]\n          },\n          "visibility": [\n            {\n              "operation": "less-than",\n              "measure": "width",\n              "threshold": "|xe-x|",\n              "transitionPadding": 10,\n              "target": "mark"\n            }\n          ],\n          "style": {"textStrokeWidth": 0}\n        },\n        {\n          "mark": "rect",\n          "dataTransform": {\n            "filter": [{"field": "Stain", "oneOf": ["acen"], "not": true}]\n          },\n          "color": {\n            "field": "Stain",\n            "type": "nominal",\n            "domain": ["gneg", "gpos25", "gpos50", "gpos75", "gpos100", "gvar"],\n            "range": [\n              "white",\n              "#D9D9D9",\n              "#979797",\n              "#636363",\n              "black",\n              "#A0A0F2"\n            ]\n          }\n        },\n        {\n          "mark": "triangleRight",\n          "dataTransform": {\n            "filter": [\n              {"field": "Stain", "oneOf": ["acen"]},\n              {"field": "Name", "include": "q"}\n            ]\n          },\n          "color": {"value": "#B40101"}\n        },\n        {\n          "mark": "triangleLeft",\n          "dataTransform": {\n            "filter": [\n              {"field": "Stain", "oneOf": ["acen"]},\n              {"field": "Name", "include": "p"}\n            ]\n          },\n          "color": {"value": "#B40101"}\n        }\n      ],\n      "size": {"value": 20},\n      "stroke": {"value": "gray"},\n      "strokeWidth": {"value": 0.5}\n    }\n  ]\n}\n'))))}m.isMDXComponent=!0}}]);